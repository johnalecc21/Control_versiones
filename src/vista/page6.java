/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import controlador.ConexionDB;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import modelo.Producto;
import modelo.Ventas;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;
/**
 *
 * @author johna
 */
public class page6 extends javax.swing.JPanel {


    /**
     * Creates new form page6
     */
    public page6() {
        initComponents();

    }

    

public void mostrarVentasEnJTable(List<Ventas> ventas, JTable jreporte) {
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(new Object[]{"Número de Factura", "Fecha", "Total de Ventas"});
    jreporte.setModel(model);

    for (Ventas venta : ventas) {
        Object[] row = new Object[3];
        row[0] = venta.getNumeroFactura();
        row[1] = venta.getFecha();
        row[2] = venta.getTotalVentas();
        model.addRow(row);
    }


}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        textFieldFechaInicio = new javax.swing.JTextField();
        textFieldFechaFin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BtnReporte = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jreporte = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("En este panel podras generar un reporte de las ventas en un rango de fechas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(270, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 27, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textFieldFechaInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFechaInicioActionPerformed(evt);
            }
        });
        textFieldFechaInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldFechaInicioKeyTyped(evt);
            }
        });
        jPanel3.add(textFieldFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 194, 47));

        textFieldFechaFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFechaFinActionPerformed(evt);
            }
        });
        textFieldFechaFin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldFechaFinKeyTyped(evt);
            }
        });
        jPanel3.add(textFieldFechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 193, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Fecha Inicio:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 97, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Fecha Fin:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 97, -1));

        BtnReporte.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BtnReporte.setText("Generar reporte");
        BtnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReporteActionPerformed(evt);
            }
        });
        jPanel3.add(BtnReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(848, 8, 147, 47));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 67, 1030, 70));

        jreporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jreporte);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 1030, 380));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1076, 570));
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldFechaInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFechaInicioActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_textFieldFechaInicioActionPerformed

    private void textFieldFechaFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFechaFinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFechaFinActionPerformed

    private void BtnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReporteActionPerformed
        // TODO add your handling code here:ConexionDB db = new ConexionDB();
ConexionDB db = new ConexionDB();
// Obtener fechas desde los campos de texto
String fechaInicio = textFieldFechaInicio.getText();
String fechaFin = textFieldFechaFin.getText();

try {
    if (!fechaInicio.isEmpty() && !fechaFin.isEmpty()) {
        List<Ventas> ventas = db.buscarVentasPorFecha(fechaInicio, fechaFin);
        mostrarVentasEnJTable(ventas, jreporte);
    } else {
       JOptionPane.showMessageDialog(null, "Campos vacios");
    }
} catch (Exception e) {
    e.printStackTrace();

}

    }//GEN-LAST:event_BtnReporteActionPerformed

    private void textFieldFechaInicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldFechaInicioKeyTyped
        // TODO add your handling code here:
textFieldFechaInicio.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
        String text = textFieldFechaInicio.getText();

        // Verifica si el carácter es un número o el símbolo "/"
        if (Character.isDigit(c) || c == '/') {
            // Verifica el formato del texto ingresado
            if (text.length() == 2 || text.length() == 5) {
                textFieldFechaInicio.setText(text + "/");
            }
            
            // Obtiene los componentes de la fecha ingresada
            String[] dateComponents = (text + c).split("/");
            if (dateComponents.length == 3) {
                try {
                    int day = Integer.parseInt(dateComponents[0]);
                    int month = Integer.parseInt(dateComponents[1]);
                    int year = Integer.parseInt(dateComponents[2]);
                    
                    // Verifica la validez del mes
                    if (month < 1 || month > 12) {
                        e.consume(); // Descarta el carácter ingresado
                    }
                    
                    // Verifica la validez del día según el mes
                    boolean isValidDay = false;
                    if (month == 2) {
                        // Febrero (considera si el año es bisiesto o no)
                        boolean isLeapYear = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
                        isValidDay = day >= 1 && day <= (isLeapYear ? 29 : 28);
                    } else if (month == 4 || month == 6 || month == 9 || month == 11) {
                        // Meses con 30 días
                        isValidDay = day >= 1 && day <= 30;
                    } else {
                        // Meses con 31 días
                        isValidDay = day >= 1 && day <= 31;
                    }
                    
                    if (!isValidDay) {
                        e.consume(); // Descarta el carácter ingresado
                    }
                } catch (NumberFormatException ex) {
                    // Ignora la excepción si no se pueden parsear los componentes de la fecha
                }
            }
        } else {
            e.consume(); // Descarta el carácter ingresado
        }

        // Verifica la longitud del texto
        if (text.length() >= 10) {
            e.consume(); // Descarta el carácter ingresado
        }
    }
});

    }//GEN-LAST:event_textFieldFechaInicioKeyTyped

    private void textFieldFechaFinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldFechaFinKeyTyped
        // TODO add your handling code here:
  textFieldFechaFin.addKeyListener(new KeyAdapter() {
    public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
        String text = textFieldFechaFin.getText();

        // Verifica si el carácter es un número o el símbolo "/"
        if (Character.isDigit(c) || c == '/') {
            // Verifica el formato del texto ingresado
            if (text.length() == 2 || text.length() == 5) {
                textFieldFechaFin.setText(text + "/");
            }
            
            // Obtiene los componentes de la fecha ingresada
            String[] dateComponents = (text + c).split("/");
            if (dateComponents.length == 3) {
                try {
                    int day = Integer.parseInt(dateComponents[0]);
                    int month = Integer.parseInt(dateComponents[1]);
                    int year = Integer.parseInt(dateComponents[2]);
                    
                    // Verifica la validez del mes
                    if (month < 1 || month > 12) {
                        e.consume(); // Descarta el carácter ingresado
                    }
                    
                    // Verifica la validez del día según el mes
                    boolean isValidDay = false;
                    if (month == 2) {
                        // Febrero (considera si el año es bisiesto o no)
                        boolean isLeapYear = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
                        isValidDay = day >= 1 && day <= (isLeapYear ? 29 : 28);
                    } else if (month == 4 || month == 6 || month == 9 || month == 11) {
                        // Meses con 30 días
                        isValidDay = day >= 1 && day <= 30;
                    } else {
                        // Meses con 31 días
                        isValidDay = day >= 1 && day <= 31;
                    }
                    
                    if (!isValidDay) {
                        e.consume(); // Descarta el carácter ingresado
                    }
                } catch (NumberFormatException ex) {
                    // Ignora la excepción si no se pueden parsear los componentes de la fecha
                }
            }
        } else {
            e.consume(); // Descarta el carácter ingresado
        }

        // Verifica la longitud del texto
        if (text.length() >= 10) {
            e.consume(); // Descarta el carácter ingresado
        }
    }
});

    }//GEN-LAST:event_textFieldFechaFinKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnReporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jreporte;
    private javax.swing.JTextField textFieldFechaFin;
    private javax.swing.JTextField textFieldFechaInicio;
    // End of variables declaration//GEN-END:variables
}
